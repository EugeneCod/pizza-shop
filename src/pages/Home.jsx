import { useEffect, useRef } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import qs from 'qs';

import { Categories, PizzaBlock, SortPopup, Skeleton, Pagination } from '../components';
import { sortItems } from '../components/SortPopup';
import {
  selectFilter,
  setCategoryId,
  setCurrentPage,
  setFilters,
} from '../reduxToolkit/slices/filterSlice';
import { fetchPizzas, selectPizzasData } from '../reduxToolkit/slices/pizzasSlice';

const categories = ['–í—Å–µ', '–ú—è—Å–Ω—ã–µ', '–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏–µ', '–ì—Ä–∏–ª—å', '–û—Å—Ç—Ä—ã–µ', '–ó–∞–∫—Ä—ã—Ç—ã–µ'];

function Home() {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const isSearch = useRef(false);
  const isMounted = useRef(false);

  const { categoryId, sort, currentPage, searchValue } = useSelector(selectFilter);
  const { items, status } = useSelector(selectPizzasData);

  const handleSelectCategory = (index) => {
    dispatch(setCategoryId(index));
  };

  const handleSwitchPagination = (pageNumber) => {
    console.log(pageNumber);
    dispatch(setCurrentPage(pageNumber));
  };

  const getPizzas = async () => {
    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';
    const sortBy = sort.sortProperty.replace('-', '');
    const category = categoryId > 0 ? `category=${categoryId}` : '';
    // Mokapi –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø–æ–∏—Å–∫–∞ —Å–æ–≤–º–µ—â–µ–Ω–Ω–æ–≥–æ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π.
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–¥–∞–µ—Ç—Å—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ, –ø–æ—ç—Ç–æ–º—É –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–π –≤ —Ñ–æ—Ä–º—É –ø–æ–∏—Å–∫–∞.
    const search = searchValue ? `&search=${searchValue}` : '';
    dispatch(
      fetchPizzas({
        order,
        sortBy,
        category,
        search,
        currentPage,
      }),
    );
  };

  // –ø–æ–∏—Å–∫ –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –º–∞—Å—Å–∏–≤—É
  // const renderedPizzas = pizzas && pizzas.filter(obj => {
  //   if (obj.title.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {return true}
  //   return false;
  // }).map((pizza) => <PizzaBlock key={pizza.id} {...pizza} />);

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è URL-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ redux
  useEffect(() => {
    if (window.location.search) {
      const params = qs.parse(window.location.search.substring(1));
      const sort = sortItems.find((obj) => obj.sortProperty === params.sortProperty);
      dispatch(setFilters({ ...params, sort }));
      isSearch.current = true;
    }
  }, []);

  // –ï—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–∂–µ –Ω–µ –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤—à–∏–≤–∞—é—Ç—Å—è –≤ URL
  useEffect(() => {
    if (isMounted.current) {
      const queryString = qs.stringify({
        sortProperty: sort.sortProperty,
        categoryId,
        currentPage,
      });
      navigate(`?${queryString}`);
    }
    isMounted.current = true;
  }, [categoryId, sort.sortProperty, currentPage]);

  useEffect(() => {
    window.scrollTo(0, 0);
    if (!isSearch.current || isMounted.current) {
      getPizzas();
    }

    isSearch.current = false;
  }, [categoryId, sort.sortProperty, searchValue, currentPage]);

  const renderedPizzas =
    items &&
    items.map((pizza) => (
      <PizzaBlock key={pizza.id} {...pizza} />
    ));
  const skeletons = [...new Array(9)].map((_, index) => <Skeleton key={index} />);

  return (
    <div className="container">
      <div className="content__top">
        <Categories
          onClickItem={handleSelectCategory}
          items={categories}
          selectedItem={categoryId}
        />
        <SortPopup />
      </div>
      {status === 'error' ? (
        <div className="content__error-container">
          <h2 className="content__error-title">–î–∞–Ω–Ω—ã–µ —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã üòï</h2>
          <p className="content__error-description">
            –ü—Ä–∏–Ω–æ—Å–∏–º –∏—Å–∫—Ä–µ–Ω–Ω–∏–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è. –ú—ã –¥–µ–ª–∞–µ–º –≤—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ
            –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É.
          </p>
        </div>
      ) : (
        <>
          <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
          <div className="content__items">{status === 'loading' ? skeletons : renderedPizzas}</div>
        </>
      )}
      <Pagination currentPage={currentPage} onPageChange={handleSwitchPagination} />
    </div>
  );
}

export default Home;
// —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç –±–æ–ª—å—à–µ–π –∫ –º–µ–Ω—å—à–µ–π (asc - –Ω–∞–æ–±–æ—Ä–æ—Ç)
// https://63b939b56f4d5660c6e81059.mockapi.io/items?sortBy=category&order=desc
// —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–æ–≤–º–µ—â–µ–Ω–Ω–∞—è —Å –ø–æ–∏—Å–∫–æ–º
// https://63b939b56f4d5660c6e81059.mockapi.io/items?sortBy=category&order=desc&search=–ü–µ–ø–ø–µ—Ä–æ–Ω–∏&category=2
