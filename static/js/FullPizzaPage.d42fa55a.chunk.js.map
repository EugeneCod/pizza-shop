{"version":3,"file":"static/js/FullPizzaPage.d42fa55a.chunk.js","mappings":"sPACA,EAAuB,wBAAvB,EAAiE,mCAAjE,EAA4G,yBAA5G,EAA2J,uCAA3J,EAAyM,wBAAzM,EAA+O,+BAA/O,EAAsR,yBAAtR,EAA4T,8BAA5T,EAA0W,iCAA1W,EAAsZ,4BAAtZ,EAA6b,4BAA7b,EAA0e,kCAA1e,EAA+hB,oC,2DC8J/hB,EA7IsB,WACpB,IAAQA,EAAiBC,EAAAA,EAAAA,MAAVC,EAAUD,EAAAA,EAAAA,MACnBE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,YAAiB,eAApCC,EAAK,KAAEC,EAAQ,KACtB,GAAoCF,EAAAA,EAAAA,WAAc,OAALC,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAM,KAAM,GAAE,eAA3DC,EAAU,KAAEC,EAAa,KAChC,GAAoCL,EAAAA,EAAAA,WAAc,OAALC,QAAK,IAALA,OAAK,EAALA,EAAOK,MAAM,KAAMb,EAAM,IAAG,eAAlEc,EAAU,KAAEC,EAAa,KAEhC,GAAoCR,EAAAA,EAAAA,UAAiB,GAAE,eAAhDS,EAAU,KAAEC,EAAa,KAC1BC,GAAYC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAoBf,IAgElD,OA/DAgB,QAAQC,IAAIN,IA0CZO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,yCAAG,kHAEeC,EAAAA,GAAAA,IAC1B,qDAAuDpB,GACvD,KAAD,EAFKqB,EAAa,OAGnBjB,EAASiB,EAAcC,MACvBV,EAA6BC,EA/BLU,QAAO,SAACC,EAAKC,GACvC,OAAKA,EAASC,MAGPF,EAAMC,EAASC,MAFbF,CAGX,GAAG,IACa,GA0BZjB,EAAcc,EAAcC,KAAKjB,MAAM,IACvCK,EAAcW,EAAcC,KAAKd,MAAM,IAAI,kDAE3CQ,QAAQC,IAAI,EAAD,IACXU,MACE,ucAEF7B,EAAS,KAAK,0DAEjB,kBAhBa,mCAiBdqB,GACF,GAAG,IAEEhB,GAKH,iBAAKyB,UAAWC,EAAY,WAC1B,gBAAKD,UAAWC,EAAcC,IAAK3B,EAAM4B,SAAUC,IAAI,MACvD,iBAAKJ,UAAWC,EAA2B,WACzC,eAAID,UAAWC,EAAY,SAAE1B,EAAM8B,SACnC,cAAGL,UAAWC,EAAmB,SAAE1B,EAAM+B,eACzC,iBAAKN,UAAWC,EAAqB,WACnC,eAAID,UAAWC,EAAgB,SAC5B1B,EAAME,OACLZ,EAAM0C,KAAI,SAACC,EAAMC,GAAK,aACpB,eACET,UAAWU,IAAWT,GAAe,eAClCA,EAAwBvB,IAAe+B,IAAK,SAC5CR,GAA2B1B,EAAME,MAAMkC,SAASF,IAAM,IAEzDG,QAAS,kBAzEzB,SAA0BH,GACxB9B,EAAc8B,EAChB,CAuE+BI,CAAiBJ,EAAM,EAAC,SAEtCD,GAAI,UADGA,EAAI,YAAIC,GAEb,OAGX,eAAIT,UAAWC,EAAgB,SAC5B1B,EAAMK,OACLb,EAAMwC,KAAI,SAACO,EAAML,GAAK,aACpB,gBACET,UAAWU,IAAWT,GAAe,eAClCA,EAAwBpB,IAAeiC,IAAI,SAC3Cb,GAA2B1B,EAAMK,MAAM+B,SAASG,IAAK,IAExDF,QAAS,kBAnFzB,SAA0BE,GACxBhC,EAAcgC,EAChB,CAiF+BC,CAAiBD,EAAK,EAAC,UAErCA,EAAI,6BADGA,EAAI,YAAIL,GAEb,UAIb,iBAAKT,UAAWC,EAAuB,WACrC,eAAGD,UAAWC,EAAa,UAAE1B,EAAMyC,MAAK,cACxC,oBAAQJ,QA9EhB,WACE,GAAIrC,EAAO,CACT,IAAM0C,EAAiB,CACrB7C,GAAIG,EAAMH,GACViC,MAAO9B,EAAM8B,MACbW,MAAOzC,EAAMyC,MACbb,SAAU5B,EAAM4B,SAChBK,KAAM3C,EAAMa,GACZoC,KAAMjC,GAERb,GAASkD,EAAAA,EAAAA,IAAQD,IACjBjC,GAAc,SAACmC,GAAI,OAAMA,EAAQ,CAAC,GACpC,CACF,EAiEyCnB,UAAU,qCAAoC,WAC7E,gBACEoB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BAA4B,UAClC,iBACEC,EAAE,2QACFF,KAAK,aAGT,+EAECxC,EAAa,IAAK,uBAAIA,cAI7B,SAAC,KAAM,CAAC2C,OAAK,EAAC1B,UAAWC,EAAmBW,QAtHhD,WACE1C,GAAU,EACZ,EAoH+E,UACzE,0HA5DG,gFAgEX,C","sources":["webpack://pizza-shop/./src/pages/FullPizza/FullPizza.module.scss?be84","pages/FullPizza/FullPizza.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FullPizza_root__RFyu4\",\"bottomContainer\":\"FullPizza_bottomContainer__WwXnn\",\"image\":\"FullPizza_image__Cv-G8\",\"propertiesContainer\":\"FullPizza_propertiesContainer__sLNL6\",\"name\":\"FullPizza_name__q+wXO\",\"description\":\"FullPizza_description__HoSB+\",\"price\":\"FullPizza_price__VG-C+\",\"buttonBack\":\"FullPizza_buttonBack__i9QY0\",\"sortContainer\":\"FullPizza_sortContainer__xlhCb\",\"sortList\":\"FullPizza_sortList__IVgeD\",\"sortItem\":\"FullPizza_sortItem__bv3V0\",\"sortItemActive\":\"FullPizza_sortItemActive__iUC4+\",\"sortItemDisabled\":\"FullPizza_sortItemDisabled__Jfsao\"};","import { useEffect, FC, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './FullPizza.module.scss';\r\nimport { Button } from '../../components';\r\nimport { PIZZAOPTIONS } from '../../utils/constants';\r\nimport { Pizza } from '../../reduxToolkit/pizzas/types';\r\nimport { CartItem } from '../../reduxToolkit/cart/types';\r\nimport { addItem } from '../../reduxToolkit/cart/slice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCartItemsById } from '../../reduxToolkit/cart/selectors';\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst FullPizza: FC = () => {\r\n  const { TYPES, SIZES } = PIZZAOPTIONS;\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<keyof Params>() as Params;\r\n  const [pizza, setPizza] = useState<Pizza>();\r\n  const [activeType, setActiveType] = useState(pizza?.types[0] || 0);\r\n  const [activeSize, setActiveSize] = useState(pizza?.sizes[0] || SIZES[0]);\r\n  // const [cartItems, setCartItems] =  useState<CartItem[]>();\r\n  const [addedCount, setAddedCount] = useState<number>(0);\r\n  const cartItems = useSelector(selectCartItemsById(id));\r\n  console.log(addedCount);\r\n\r\n  // const addedCount = cartItem?.count || 0;\r\n  // const addedCount = calcItemsCount(cartItems);\r\n\r\n  function hangleClickButtonBack() {\r\n    navigate(-1);\r\n  }\r\n\r\n  function handleSelectType(index: number) {\r\n    setActiveType(index);\r\n  }\r\n\r\n  function handleSelectSize(size: number) {\r\n    setActiveSize(size);\r\n  }\r\n\r\n  function calcItemsCount(items: CartItem[]): number {\r\n    const count: number = items.reduce((sum, cartItem) => {\r\n      if (!cartItem.count) {\r\n        return sum;\r\n      }\r\n      return sum + cartItem.count;\r\n    }, 0);\r\n    return count || 0;\r\n  }\r\n\r\n  function handleAddPizza() {\r\n    if (pizza) {\r\n      const item: CartItem = {\r\n        id: pizza.id,\r\n        title: pizza.title,\r\n        price: pizza.price,\r\n        imageUrl: pizza.imageUrl,\r\n        type: TYPES[activeType],\r\n        size: activeSize,\r\n      };\r\n      dispatch(addItem(item));\r\n      setAddedCount((prev) => (prev += 1));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getPizza = async () => {\r\n      try {\r\n        const pizzaResponse = await axios.get(\r\n          'https://63b939b56f4d5660c6e81059.mockapi.io/items/' + id,\r\n        );\r\n        setPizza(pizzaResponse.data);\r\n        setAddedCount(calcItemsCount(cartItems));\r\n        setActiveType(pizzaResponse.data.types[0]);\r\n        setActiveSize(pizzaResponse.data.sizes[0]);\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert(\r\n          'Ошибка при получении данных с удаленного сервера. Пожалуйста, повторите попытку позже.',\r\n        );\r\n        navigate('/');\r\n      }\r\n    };\r\n    getPizza();\r\n  }, []);\r\n\r\n  if (!pizza) {\r\n    return <div>Загрузка...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <img className={styles.image} src={pizza.imageUrl} alt=\"\" />\r\n      <div className={styles.propertiesContainer}>\r\n        <h2 className={styles.name}>{pizza.title}</h2>\r\n        <p className={styles.description}>{pizza.description}</p>\r\n        <div className={styles.sortContainer}>\r\n          <ul className={styles.sortList}>\r\n            {pizza.types &&\r\n              TYPES.map((type, index) => (\r\n                <li\r\n                  className={classNames(styles.sortItem, {\r\n                    [styles.sortItemActive]: activeType === index,\r\n                    [styles.sortItemDisabled]: !pizza.types.includes(index),\r\n                  })}\r\n                  onClick={() => handleSelectType(index)}\r\n                  key={`${type}_${index}`}>\r\n                  {type}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n          <ul className={styles.sortList}>\r\n            {pizza.sizes &&\r\n              SIZES.map((size, index) => (\r\n                <li\r\n                  className={classNames(styles.sortItem, {\r\n                    [styles.sortItemActive]: activeSize === size,\r\n                    [styles.sortItemDisabled]: !pizza.sizes.includes(size),\r\n                  })}\r\n                  onClick={() => handleSelectSize(size)}\r\n                  key={`${size}_${index}`}>\r\n                  {size} см.\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className={styles.bottomContainer}>\r\n          <p className={styles.price}>{pizza.price} ₽</p>\r\n          <button onClick={handleAddPizza} className=\"button button--outline button--add\">\r\n            <svg\r\n              width=\"12\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 12 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                fill=\"white\"\r\n              />\r\n            </svg>\r\n            <span>Добавить</span>\r\n            {}\r\n            {addedCount > 0 && <i>{addedCount}</i>}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Button black className={styles.buttonBack} onClick={hangleClickButtonBack}>\r\n        <span>Вернуться назад</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPizza;\r\n"],"names":["TYPES","PIZZAOPTIONS","SIZES","dispatch","useDispatch","navigate","useNavigate","id","useParams","useState","pizza","setPizza","types","activeType","setActiveType","sizes","activeSize","setActiveSize","addedCount","setAddedCount","cartItems","useSelector","selectCartItemsById","console","log","useEffect","getPizza","axios","pizzaResponse","data","reduce","sum","cartItem","count","alert","className","styles","src","imageUrl","alt","title","description","map","type","index","classNames","includes","onClick","handleSelectType","size","handleSelectSize","price","item","addItem","prev","width","height","viewBox","fill","xmlns","d","black"],"sourceRoot":""}